package(default_visibility = ["//visibility:public"])

cc_library(
    name = 'ir',
    srcs = [ 'args.cpp',
             'common.cpp',
             'constructor.cpp',
             'context.cpp',
             'coreirlib.cpp',
             'directedview.cpp',
             'dynamiclibrary.cpp',
             'fileReader.cpp',
             'fileWriter.cpp',
             'forcecast.cpp',
             'generator.cpp',
             'generatordef.cpp',
             'globalvalue.cpp',
             'inline.cpp',
             'instancegraph.cpp',
             'module.cpp',
             'moduledef.cpp',
             'moduledef_validate.cpp',
             'namespace.cpp',
             'op_graph.cpp',
             'passes.cpp',
             'passmanager.cpp',
             'typecache.cpp',
             'typegen.cpp',
             'types.cpp',
             'utils.cpp',
             'value.cpp',
             'valuecache.cpp',
             'valuetype.cpp',
             'wire_node.cpp',
             'wireable.cpp',
             'wiring_utils.cpp' ],
    deps = [ ':ir_hdrs',
             '//passes:passes',
             '//passes/analysis:analysis_hdrs',
             '//ir/casting:casting',
             '//ir/headers:headers',
             '//common:common',
             '//utils:utils' ])

cc_library(
    name = 'ir_hdrs',
    hdrs = [ 'args.h',
             'common.h',
             'constructor.h',
             'context.h',
             'coreir.h',
             'coreirlib.h',
             'directedview.h',
             'dynamic_bit_vector.h',
             'dynamiclibrary.h',
             'error.h',
             'fwd_declare.h',
             'generator.h',
             'generatordef.h',
             'globalvalue.h',
             'instancegraph.h',
             'json.h',
             'metadata.h',
             'module.h',
             'moduledef.h',
             'namespace.h',
             'passes.h',
             'passmanager.h',
             'typecache.h',
             'typegen.h',
             'types.h',
             'value.h',
             'valuecache.h',
             'valuetype.h',
             'wireable.h' ])
